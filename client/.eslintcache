[{"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/index.js":"1","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Home/Home.js":"2","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Login/Login.js":"3","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Register/Register.js":"4","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/App.js":"5","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/utility.js":"6","/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Chat/Chat.js":"7"},{"size":231,"mtime":1610907681420,"results":"8","hashOfConfig":"9"},{"size":2079,"mtime":1610907616708,"results":"10","hashOfConfig":"9"},{"size":3519,"mtime":1611450743996,"results":"11","hashOfConfig":"9"},{"size":3427,"mtime":1611726730331,"results":"12","hashOfConfig":"9"},{"size":577,"mtime":1611450632103,"results":"13","hashOfConfig":"9"},{"size":609,"mtime":1611451057159,"results":"14","hashOfConfig":"9"},{"size":5939,"mtime":1611939728924,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8m6akw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/index.js",[],["33","34"],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Home/Home.js",[],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Login/Login.js",[],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Register/Register.js",[],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/App.js",[],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/utility.js",[],["35","36"],"/Users/sutharseehannavajeevayokan/Desktop/groupchatapplication/client/src/components/Chat/Chat.js",["37"],"import React, { useEffect, useState, useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport { Button, TextField } from \"@material-ui/core\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\nimport { white } from 'material-ui-colors'\n\n\nconst whiteTheme = createMuiTheme({ palette: { primary: white } })\n\nconst styledBy = (property, mapping) => (props) => mapping[props[property]];\n\nconst styles = {\n    root: {\n        background: styledBy('color', {\n            blue: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        }),\n        borderRadius: 60,\n        border: 0,\n        color: 'white',\n        height: 40,\n        padding: '0 30px',\n        boxShadow: styledBy('color', {\n            blue: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n            blackish: '0 3px 5px 2px #12232E'\n        }),\n    },\n};\n\nconst useMessageStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '36ch',\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n    \"&$MuiTypography-colorTextSecondary\": {\n        color: 'white !important'\n    }\n}));\n\nconst StyledButton = withStyles(styles)(({ classes, color, ...other }) => (\n    <Button className={classes.root} {...other} type=\"submit\" />\n));\n\n\n\nfunction processMessage(payload) {\n    try {\n        return JSON.parse(payload)\n    } catch (error) {\n        return null\n    }\n}\n\n\nexport default function Chat() {\n    const [Button] = React.useState('blue');\n    const [chatMessage, setChatMessage] = useState('')\n    const [chatMessages, setChatMessages] = useState([])\n    const [wsRef, setWSRef] = useState(null)\n    const messageClasses = useMessageStyles();\n\n    const history = useHistory(0);\n\n    function sendMessage() {\n        if (wsRef?.readyState !== WebSocket.OPEN) {\n            // websocket not connected\n            return\n        }\n        wsRef.send(JSON.stringify({ message: chatMessage, intent: \"chat\" }))\n        setChatMessage(\"\")\n    }\n\n    function keyPress(e) {\n        if (e.keyCode === 13) {\n            sendMessage();\n        }\n    }\n\n    useEffect(() => {\n        const ws = new WebSocket(\"ws://localhost:1338/\" + localStorage.getItem(\"token\"))\n        ws.addEventListener(\"open\", () => {\n            // ws.send(JSON.stringify({ status: \"ok\" }))\n        }, { once: true })\n\n        ws.addEventListener(\"error\", () => {\n            alert(\"Please login first\")\n            history.replace(\"/login\")\n        })\n\n        ws.addEventListener('message', (event) => {\n            const data = event.data\n\n            const message = processMessage(data)\n\n            if (!message) {\n                return\n            }\n\n            if (message.intent === \"chat\") {\n                setChatMessages(oldMessages => {\n                    return [...oldMessages, message]\n                })\n            }\n        })\n\n        setWSRef(ws)\n\n        return () => {\n            ws.close()\n        }\n    }, [])\n\n\n\n\n    const messagesEndRef = useRef(null)\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    useEffect(() => {\n        scrollToBottom()\n    }, []);\n\n\n    return (\n        <div>\n            <div style={{ zIndex: \"100\" }}>\n                <h1 style={{ textAlign: \"center\", backgroundColor: \"#283747\" }}>YouChat Room</h1>\n            </div>\n            <div className=\"chat-background\" style={{ textAlign: \"center\", paddingTop: \"100px\", zIndex: \"99\" }}>\n\n\n                <div style={{ textAlign: \"center\" }}>{chatMessages.map((message, index) => {\n                    return (\n                        <MuiThemeProvider theme={whiteTheme}>\n                            <ListItem alignItems=\"flex-start\">\n                                <ListItemAvatar>\n                                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={message.user}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Typography\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                                className={messageClasses.inline}\n                                                color=\"textPrimary\"\n                                            >\n                                            </Typography>\n                                            {message.message}\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        </MuiThemeProvider>\n\n\n\n                    )\n                })}</div>\n\n                <div style={{ padding: \"10px\", position: \"fixed\", bottom: \"0px\", width: \"100%\", marginBottom: \"-70px\" }} ref={messagesEndRef}>\n                    <TextField onChange={e => setChatMessage(e.target.value)} value={chatMessage} multiline variant=\"standard\" color=\"primary\" onKeyDown={keyPress} style={{ width: 500 }} />\n                    <StyledButton color={Button} variant=\"contained\" onClick={sendMessage} style={{ marginLeft: \"50px\", marginBottom: \"100px\" }}>\n                        <SendIcon />\n                    </StyledButton>\n                </div>\n            </div>\n        </div>\n    )\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":121,"column":8,"nodeType":"46","endLine":121,"endColumn":10,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [history]",{"range":"53","text":"54"},[3375,3377],"[history]"]